import { EMBED_COLORS } from "@core/embed";
import { ENV } from "@core/env";
import { PACKAGE_VERSION } from "@core/package";
import { EmbedType } from "discord.js";

export const EMBED_DICTIONARY = () => {
  return {
    content: {
      success: `‚úÖ **[${ENV.APPLICATION_NAME}] Build r√©ussi sur la branche principale**`,
      failed: `üö® **[${ENV.APPLICATION_NAME}] Build √©chou√© sur la branche principale**`,
      info: `‚ÑπÔ∏è [${ENV.APPLICATION_NAME}] Information importante`,
    },
    author: {
      name: `${ENV.APPLICATION_NAME} developer`,
      url: ENV.APPLICATION_WEBSITE,
      icon_url: ENV.BOT_APPLICATION_IMAGE,
    },
    description: {
      success: `Le d√©ploiement du **${ENV.APPLICATION_NAME}** s‚Äôest termin√© sans erreur.\nLe syst√®me est d√©sormais **en production** et pleinement op√©rationnel. üöÄ\n\n Le site est d√©sormais en ligne !\nüëâ [**Visiter le site**](https://mdt.dynasty8flashback.fr/)`,
      failed: `Le d√©ploiement du **${ENV.APPLICATION_NAME}** n‚Äôa pas pu √™tre compl√©t√©.\nLes ing√©nieurs du service technique sont d√©j√† sur le coup üßë‚Äçüíª.\n\n`,
    },
    footer: {
      text: ` Syst√®me automatis√© ‚Äî Build monitor ${PACKAGE_VERSION}`,
      icon_url: ENV.BOT_APPLICATION_IMAGE,
    },
    image: {
      url: ENV.APPLICATION_IMAGE,
    },
    thumbnail: {
      url: ENV.BOT_APPLICATION_IMAGE,
    },
  };
};

export const EMBED_MESSAGE_TEMPLATE = () => {
  const { description, author, image, thumbnail, footer } = EMBED_DICTIONARY();

  return {
    success: {
      color: EMBED_COLORS.success,
      title: "üü¢ Build Success ‚Äî D√©ploiement complet",
      url: "https://discord.js.org",
      description: description.success,
      author: author,
      thumbnail: thumbnail,
      fields: [],
      image: image,
      timestamp: new Date().toISOString(),
      footer: footer,
    },
    failed: {
      color: EMBED_COLORS.danger,
      title: "‚ùå Build Failed ‚Äî Pipeline interrompue",
      url: "https://discord.js.org",
      description: description.failed,
      author: author,
      thumbnail: thumbnail,
      fields: [],
      image: image,
      timestamp: new Date().toISOString(),
      footer: footer,
    },
    info: null,
  } satisfies {
    success: EmbedType;
    failed: EmbedType;
    info?: EmbedType | null;
  };
};
